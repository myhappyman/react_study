1. create-react-app을 통해서 리액트 프로젝트를 생성할 수 있다.

아주 간단한 페이지와 함께 리액트 개발 구조로 생성이 된다.

해당 프로젝트 구동을 위해선 npm start, npm run start등의 명령어로 실행시킬수 있다.
자동으로 os상 설정된 브라우저가 열리는걸 확인 할 수 있다.

동작 명령 관련 package.json > scripts > start 관련

2. 생성된 디렉토리 구조 내 src에 모든 개발 파일들을 집어넣는다.
가장 중요한 파일은 index.js다.


3. create-react-app형태로 작성하였기에 개발하는데 자동완성 등
VScode에서 도움을 주기때문에 props가 뭐가 필요한지, PropTypes등을 작성할때
무엇을 사용하려는건지 자동완성을 제공해서 수월하게 개발 할 수 있다.


4. react에서 특정 컴포넌트를 위한 css파일을 만들 수 있는 기능이 있다.
한가지 방식은 css파일을 만드는것이다.
css파일을 만들고 꾸미 요소를 css로 꾸미고, 해당 css파일을 index.js에서 import하면 된다.
하지만 이 방법은 여러요소에 단체로 영향을 미치게되므로 이방식을 사용하지 않는다.
(이전에 css에서 개발하던거 처럼 className에 값주고 하면 되는거 아닌가...?)

두번째 방식은 css modules라는 방식이다.
공통으로 사용하고 정의하는거라면 css로 처리해도 되지만,
버튼마다 특정 컴포넌트마다 동일한 내용이여도 css가 달라야하는 경우가
굉장히 많을 것이다.
각 컴포넌트마다 css를 작성하고 그것을 꾸미는 className과 css를 적용하면
매번 리액트는 새로운 모듈을 작성하고 랜덤한 class명으로 부여하면서 동작하는 것을 볼 수 있다.

이 방식은 create-react-app이 css코드를 javascript object로 변환해주고
그 object안에 존재하는 key값을 넣으면 바로 적용이 되는 원리이다.(또한 랜덤 class명을 부여한다.)
우리가 class명을 외울필요가 없어진다.
'xxx.module.css'로만 파일명이 끝나면 된다.

심지어 css들의 class명이 동일해도 css들이 다르다면 중복되지 않고 별도의 class로 구분되어 동작한다.


5. useEffect
이벤트등의 행위로 리렌더링이 일어날때 컴포넌트가 최초에 한번 render되고 
이후에 변경된 컴포넌트만 동작하게 하고 싶다면?
state가 변할때마다 컴포넌트 자체가 다시 그려지는데 
그렇게 페이지가 구성되고 복잡한 페이지라면 브라우저에 부하가 발생할수 있다.

useEffect는 2개의 파라미터를 가진다.
@effect: 한번만 실행되고 싶은 코드를 넣는다.
@deps: 지켜볼 대상을 입력한다.
비어있다면 최초 로드되고 한번만 동작될 코드를 작성한다.
array안에 입력된 값의 state가 변화되면 그때마다 effect에 정의한 내용이 동작하도록 설정할 수 있다.
function useEffect(effect, deps);

useEffect를 통해 한번만 동작시키거나 특정 state만 변화되었을때 동작시키거나
감시를 통해 특정 어떤것들이 변화에 대하여 제어를 할 수 있다.
